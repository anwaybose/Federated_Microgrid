---
title: "A Secure Federated Learning Approach to Smart Microgrid Stability Prediction"
jupyter: python3
#subtitle: "Test Python"
author:
  - "Abtahi Reza"
  - "Anway Bose"
  - "Li Bai"
author-meta: "Li Bai"
department:
  - "Department of ECE"
  - "Department of ECE"
  - "Department of ECE"
institute:
  - "Department of ECE, Temple University, USA"
  - "Department of ECE, Temple University, USA"
  - "Department of ECE, Temple University, USA"
date: "2023-07-27"
date-format: long
params:
  days:
    label: "Number of Previous Days"
    value: 90
    input: slider
    min: 30
    max: 360
  Msg:
    label: "message"
    value: 1
    input: slider
    min: 0
    max: 1 
  region:
    label: "Regions:"
    value: Europe
    input: select
    choices: [North America, Europe, Asia]
format:
  revealjs:
    theme: [white, style/custom.scss]
    css: style/metacom_logo.css
    chalkboard: true
    slide-number: true
    preview-links: auto
    pointer:
      color: "#e7298a"
      pointerSize: 24
    include-in-header:
      text: |
        <script src="custom.js"></script>
revealjs-plugins:
  - pointer
---

## Contents
<br>

* Problem Formulation
* Federated learning Framework
* Model Encryption
* Experimental Results and analysis
* Conclusion

## Motivation
<br>

* The integration of Internet of Things (IoT) in Smart Microgrid systems generates a complex interconnected network that produces a significant amount of data, often stored in the cloud, raising concerns over data security

* Cyber attacks can be passive or active, whereas active attacks are more dangerous as they can modify the data or prevent its transmission

## Problem Formulation {auto-animate="true"}

$i \rightarrow \text{Microgrid} \ i \in \{ 1,..., N_{MG} \}$ and $j \rightarrow \text{Customer of i} \ j \in \{ 1,..., N_{i} \}$



## Problem Formulation {auto-animate="true"}
$i \rightarrow \text{Microgrid} \ i \in \{ 1,..., N_{MG} \}$ and $j \rightarrow \text{Customer of i} \ j \in \{ 1,..., N_{i} \}$ 

Let $L_i^j$ be the demand and $C(L_i^j)$ be the cost of supply that demand



## Problem Formulation {auto-animate="true"}
$i \rightarrow \text{Microgrid} \ i \in \{ 1,..., N_{MG} \}$ and $j \rightarrow \text{Customer of i} \ j \in \{ 1,..., N_{i} \}$ 

Let, $L_i^j$ be the demand and $C(L_i^j)$ be the cost of supply that demand

Considering a time span of $T$ and an boolean indicator $\phi_i^j \in \{0,1\}$, the total cost of supplying demand by $i^{th}$ MG is

$$\sum_{j=1}^{N_i} \phi_{i}^j \left(\int_{0}^{T} C(L_i^j(t))\, dt\right)$$

## Problem Formulation {auto-animate="true"}

$i \rightarrow \text{Microgrid} \ i \in \{ 1,..., N_{MG} \}$ and 

$p_{i,g}$ is the $g$-th power profile in the total power profile pool $P_i$ of $i$-th MG



## Problem Formulation {auto-animate="true"}
$i \rightarrow \text{Microgrid} \ i \in \{ 1,..., N_{MG} \}$ and 

$p_{i,g}$ is the $g$-th power profile in the total power profile pool $P_i$ of $i$-th MG

$C(p_{i,g)}(t))$ is the cost of each of $g$ power sources used at time $t$



## Problem Formulation {auto-animate="true"}
$i \rightarrow \text{Microgrid} \ i \in \{ 1,..., N_{MG} \}$ and 

$p_{i,g}$ is the $g$-th power profile in the total power profile pool $P_i$ of $i$-th MG

$C(p_{i,g}(t))$ is the cost of each of $g$ power sources used at time $t$

Considering a time span of $T$ and an boolean indicator $\psi_{(i,j)} \in \{0,1\}$, the total generating cost by $i^{th}$ MG is

$$ \sum_{p_{i,g} \in P_i } \psi_{(i,g)}  \left(\int_{0}^{T} C(p_{i,g}(t))\, dt\right)$$

## Problem Formulation {auto-animate="true"}
Considering boolean $\pi_i \in {0,1}$ indicating the intrigation of the $i^{th}$ MG to the SG

## Problem Formulation {auto-animate="true"}
Considering boolean $\pi_i \in {0,1}$ indicating the intrigation of the $i^{th}$ MG to the SG

The OPF problem is given by

$$\begin{split}
    \min_{\pi_{i}, \psi_{(i,g)}, \phi_{i}^j} \quad \sum_{i \in N_{MG}}  \pi_{i} & \sum_{p_{i,g} \in P_i } \psi_{(i,g)}  \left(\int_{0}^{T} C(p_{i,g}(t))\, dt\right) \\ & + \sum_{j=1}^{N_i} \phi_{i}^j \left(\int_{0}^{T} C(L_i^j(t))\, dt\right) 
    \end{split}$$

## Problem Formulation {auto-animate="true"}
Eeach power profile $p_{i,g}(t)$ must be limited with the following three constraints


## Problem Formulation {auto-animate="true"}
Eeach power profile $p_{i,g}(t)$ must be limited with the following three constraints

**Generation limits**:
$$p_{(i,g)}^{min} \leq p_{(i,g)}(t)\leq p_{(i,g)}^{max} \qquad \forall \quad p_{(i,g)} \in P_i^1, t \in T$$

## Problem Formulation {auto-animate="true"}
Eeach power profile $p_{i,g}(t)$ must be limited with the following three constraints

**Generation limits**:
$$p_{(i,g)}^{min} \leq p_{(i,g)}(t)\leq p_{(i,g)}^{max} \qquad \forall \quad p_{(i,g)} \in P_i^1, t \in T$$

**Ramp limits**:
$$^{r_{down}}_{(i,g)} \leq p_{(i,g)}(t+1) - p_{(i,g)}(t) \leq p^{r_{up}}_{(i,g)} \quad \forall t \in T$$


## Problem Formulation {auto-animate="true"}
**Generation limits**:
$$p_{(i,g)}^{min} \leq p_{(i,g)}(t)\leq p_{(i,g)}^{max} \qquad \forall \quad p_{(i,g)} \in P_i^1, t \in T$$

**Ramp limits**:
$$^{r_{down}}_{(i,g)} \leq p_{(i,g)}(t+1) - p_{(i,g)}(t) \leq p^{r_{up}}_{(i,g)} \quad \forall t \in T$$

**System demand**:
$$\sum_{p_{(i,g)} \in P_i} p_{(i,g)}(t) \geq \sum_{j =1}^{j=N_i} L^j_{i}(t) \quad \forall t \in T$$


## Stability Predicting Feature {auto-animate="true"}
We define 
$$\delta(a,b) =     \begin{cases}
      0, & \text{if}\ a <  b\\
      1, & \text{otherwise}
    \end{cases}$$



## Stability Predicting Feature {auto-animate="true"}
We define 
$$\delta(a,b) =     \begin{cases}
      0, & \text{if}\ a <  b\\
      1, & \text{otherwise}
    \end{cases}$$

From each generation profile $P_{i}$ we obtain

$s_i \rightarrow$ minimum required reaction time

$\gamma_i \rightarrow$ maximum allowable reaction time


## Stability Predicting Feature {auto-animate="true"}
From each generation profile $P_{i}$ we obtain

$s_i \rightarrow$ minimum required reaction time

$\gamma_i \rightarrow$ maximum allowable reaction time

If $\gamma_i < s_i$ the energy source is not adequate to supply sufficient energy demands

$$\delta(\gamma_i,s_i) =     \begin{cases}
      0, & \text{if}\ \gamma_i < s_i\\
      1, & \text{otherwise}
    \end{cases}$$


## Stability Predicting Feature {auto-animate="true"}
$s_i \rightarrow$ minimum required reaction time

$\gamma_i \rightarrow$ maximum allowable reaction time

If $\gamma_i < s_i$ the energy source is not adequate to supply sufficient energy demands

$$\delta(\gamma_i,s_i) =     \begin{cases}
      0, & \text{if}\ \gamma_i < s_i\\
      1, & \text{otherwise}
    \end{cases}$$
The total generated power in the SG is defined by
$$\sum_{i \in N_{MG}} \pi_i \delta(\gamma_i,s_i) \cdot P_i = P_{total}$$


## Stability Predicting Feature {auto-animate="true"}
From each load profile $L^j_{i}$ we obtain

$_i^j \rightarrow$ minimum required reaction time

$\tau_i^j \rightarrow$ maximum allowable reaction time


## Stability Predicting Feature {auto-animate="true"}
From each load profile $L^j_{i}$ we obtain

$r_i^j \rightarrow$ minimum required reaction time

$\tau_i^j \rightarrow$ maximum allowable reaction time

$$\delta(\tau_i^j,r_i^j) =     \begin{cases}
      0, & \text{if}\ \tau_i^j < r_i^j\\
      1, & \text{otherwise}
    \end{cases}$$


## Stability Predicting Feature {auto-animate="true"}
From each load profile $L^j_{i}$ we obtain

$r_i^j \rightarrow$ minimum required reaction time

$\tau_i^j \rightarrow$ maximum allowable reaction time

$$\delta(\tau_i^j,r_i^j) =     \begin{cases}
      0, & \text{if}\ \tau_i^j < r_i^j\\
      1, & \text{otherwise}
    \end{cases}$$

the number of active and fulfilled demand loads
$$\sum_{j \in N_i} \phi_{i}^j \delta(\tau_i^j, r_i^j) = N_i^{active} \subseteq N_i$$


## Stability Predicting Feature {auto-animate="true"}
From each load profile $L^j_{i}$ we obtain

$r_i^j \rightarrow$ minimum required reaction time

$\tau_i^j \rightarrow$ maximum allowable reaction time

$$\delta(\tau_i^j,r_i^j) =     \begin{cases}
      0, & \text{if}\ \tau_i^j < r_i^j\\
      1, & \text{otherwise}
    \end{cases}$$

The total SG load demand
$$\sum_{i \in N_{MG}} \pi_i \sum_{j \in N_i} \phi_{i}^j \delta(\tau_i^j, r_i^j)\cdot L_i^j = L_{total}$$



## Stability Predicting Feature {auto-animate="true"}
The stability classification is defined as
$$\delta(P_{total}, L_{total}) =     \begin{cases}
      0, & \text{if}\ P_{total} < L_{total} \ \left(\text{unstable}\right)\\
      1, & \text{stable}
    \end{cases}$$
    
    
## Stability Predicting Feature {auto-animate="true"}
The stability classification is defined as
$$\delta(P_{total}, L_{total}) =     \begin{cases}
      0, & \text{if}\ P_{total} < L_{total} \ \left(\text{unstable}\right)\\
      1, & \text{stable}
    \end{cases}$$

$$\delta \left(\sum_{i \in N_{MG}} \pi_i \delta(\gamma_i,s_i) \cdot P_i  ,  \sum_{i \in N_{MG}} \pi_i \sum_{j \in N_i} \phi_{i}^j \delta(\tau_i^j, r_i^j)\cdot L_i^j \right) =     \begin{cases}
      0, & \text{unstable}\\
      1, & \text{stable}
    \end{cases}$$
    


## Stability Predicting Feature {auto-animate="true"}
The stability classification is defined as
$$\delta(P_{total}, L_{total}) =     \begin{cases}
      0, & \text{if}\ P_{total} < L_{total} \ \left(\text{unstable}\right)\\
      1, & \text{stable}
    \end{cases}$$

$$\delta \left(\sum_{i \in N_{MG}} \pi_i \delta(\gamma_i,s_i) \cdot P_i  ,  \sum_{i \in N_{MG}} \pi_i \sum_{j \in N_i} \phi_{i}^j \delta(\tau_i^j, r_i^j)\cdot L_i^j \right) =     \begin{cases}
      0, & \text{unstable}\\
      1, & \text{stable}
    \end{cases}$$

Stability predicting features are  
$$\boldsymbol X = \left[ P_i, L_i^j, \gamma_i, \tau_i^j, C(P_i), C(L_i^j) \right] \quad \forall i \in N_{MG}, \forall j \in N_i$$

## Stability Predicting Feature {.smaller}

Stability predicting features are  
$$\boldsymbol X = \left[ P_i, L_i^j, \gamma_i, \tau_i^j, C(P_i), C(L_i^j) \right] \quad \forall i \in N_{MG}, \forall j \in N_i$$


| $\gamma_i$ | $\tau_i^1$ | $\tau_i^2$ | $\tau_i^3$ | $P_i$ | $L_i^1$ | $L_i^2$ | $L_i^3$ | $C(P_i)$ | $C(L_i^1)$ | $C(L_i^2)$ | $C(L_i^3)$ | stability |
|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:|
| 2.9590 | 3.0798 | 8.3810 | 9.7807 | 3.7630 | -0.7826 | -1.2573 | -1.7230 | 0.6504 | 0.8595 | 0.8874 | 0.9580 | 0 (unstable) |
| 9.3040 | 4.9025 | 3.0475 | 1.3693 | 5.0678 | -1.9400 | -1.8727 | -1.2550 | 0.4134 | 0.8624 | 0.5621 | 0.7817 | 1 (stable)  |
| 2.9590 | 3.0798 | 8.3810 | 9.7807 | 3.7630 | -0.7826 | -1.2573 | -1.7230 | 0.6504 | 0.8595 | 0.8874 | 0.9580 | 0 (unstable) |
| 2.9590 | 3.0798 | 8.3810 | 9.7807 | 3.7630 | -0.7826 | -1.2573 | -1.7230 | 0.6504 | 0.8595 | 0.8874 | 0.9580 | 0 (unstable) |

: Dataset




## Proposed Architecture {auto-animate="true"}
Our goal is to solve
$$\max_{\boldsymbol w} \mathcal{P}(y=0,1|\boldsymbol X, \boldsymbol w)$$


## Proposed Architecture {auto-animate="true"}
Our goal is to solve:
$$\max_{\boldsymbol w} \mathcal{P}(y=0,1|\boldsymbol X, \boldsymbol w)$$


::: columns
::: {.column width="49%"}
![](./imgs/ANN.png){width=140%}
:::

::: {.column width="2%"}
:::
:::




## Proposed Architecture {auto-animate="true"} 
Our goal is to solve:
$$\max_{\boldsymbol w} \mathcal{P}(y=0,1|\boldsymbol X, \boldsymbol w)$$

::: columns
::: {.column width="49%"}
![](./imgs/ANN.png){width=140%}
:::

::: {.column width="2%"}
:::

::: {.column width="49%"}
ReLU
$$p(y= 0,1|\boldsymbol X) = \max\{0, y \boldsymbol w^T \boldsymbol X \}$$
Sigmoid
$$p(y=0, 1|\boldsymbol X) = \frac{1}{1+e^{-y \boldsymbol w^T \boldsymbol X}}$$
:::
:::



## Encrypted Federated Architecture {auto-animate="true"}
![](./imgs/step_1.png)


## Encrypted Federated Architecture {auto-animate="true"}
![](./imgs/step_2.png)


## Encrypted Federated Architecture {auto-animate="true"}
![](./imgs/step_3.png)


## Encrypted Federated Architecture {auto-animate="true"}
![](./imgs/step_4.png)


## Encrypted Federated Architecture {auto-animate="true"}
![](./imgs/step_5.png)


## Encrypted Federated Architecture {auto-animate="true"}
![](./imgs/step_6.png)



## Experimental Result {auto-animate="true"}
Centralized VS Decentralized

![](./imgs/cendecen.png)


## Experimental Result {auto-animate="true"}
Data overlap accuracy

![](./imgs/overlap.png)


## Conclusion & Future Work {.smaller}
<br>

* A fully decentralized architecture for secure federated learning to predict stability in microgrids.

* Analysis demonstrates that the federated learning approach is entirely decentralized and secure, protecting private data while maintaining system stability

* The architecture is dynamic and adaptable to network changes, such as the addition or failure of a microgrid, without disrupting its secure operation

* Investigating homomorphic cryptography’s potential for federated learning, which allows the secure processing of sensitive data without decryption, thereby preserving its privacy and security

![](./imgs/flowcode.png){fig-align="right" width=40%}

::: footer
Find codes in our Github: [GitHub](https://github.com/anwaybose/Federated_Microgrid)
:::




# THANK YOU